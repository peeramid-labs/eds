[
  "error AccessControlBadConfirmation()",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error AccessControlBadConfirmation()",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function transferOwnership(address newOwner)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function acceptDefaultAdminTransfer()",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function owner() view returns (address)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
  "function renounceRole(bytes32 role, address account)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "function acceptDefaultAdminTransfer()",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 acceptSchedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 effectSchedule)",
  "function renounceRole(bytes32 role, address callerConfirmation)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "event AdminChanged(address previousAdmin, address newAdmin)",
  "event BeaconUpgraded(address indexed beacon)",
  "event Upgraded(address indexed implementation)",
  "function owner() view returns (address)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)",
  "error ERC721InsufficientApproval(address operator, uint256 tokenId)",
  "error ERC721InvalidApprover(address approver)",
  "error ERC721InvalidOperator(address operator)",
  "error ERC721InvalidOwner(address owner)",
  "error ERC721InvalidReceiver(address receiver)",
  "error ERC721InvalidSender(address sender)",
  "error ERC721NonexistentToken(uint256 tokenId)",
  "error CloneArgumentsTooLong()",
  "constructor(address implementation, bytes _data) payable",
  "error AddressEmptyCode(address target)",
  "error ERC1967InvalidImplementation(address implementation)",
  "error ERC1967NonPayable()",
  "error FailedCall()",
  "event Upgraded(address indexed implementation)",
  "error ERC1967InvalidAdmin(address admin)",
  "error ERC1967InvalidBeacon(address beacon)",
  "error ERC1967InvalidImplementation(address implementation)",
  "error ERC1967NonPayable()",
  "function implementation() view returns (address)",
  "constructor(address initialOwner)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function UPGRADE_INTERFACE_VERSION() view returns (string)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function transferOwnership(address newOwner)",
  "function upgradeAndCall(address proxy, address implementation, bytes data) payable",
  "event AdminChanged(address previousAdmin, address newAdmin)",
  "event BeaconUpgraded(address indexed beacon)",
  "event Upgraded(address indexed implementation)",
  "function upgradeToAndCall(address newImplementation, bytes data) payable",
  "constructor(address _logic, address initialOwner, bytes _data) payable",
  "error AddressEmptyCode(address target)",
  "error ERC1967InvalidAdmin(address admin)",
  "error ERC1967InvalidImplementation(address implementation)",
  "error ERC1967NonPayable()",
  "error FailedCall()",
  "error ProxyDeniedAdminAccess()",
  "event AdminChanged(address previousAdmin, address newAdmin)",
  "event Upgraded(address indexed implementation)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "error AddressEmptyCode(address target)",
  "error Create2EmptyBytecode()",
  "error FailedCall()",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "error MissingPrecompile(address)",
  "error InvalidShortString()",
  "error StringTooLong(string str)",
  "error StringsInsufficientHexLength(uint256 value, uint256 length)",
  "error StringsInvalidAddressFormat()",
  "error StringsInvalidChar()",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error SafeCastOverflowedIntDowncast(uint8 bits, int256 value)",
  "error SafeCastOverflowedIntToUint(int256 value)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error SafeCastOverflowedUintToInt(uint256 value)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "event Initialized(uint64 version)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes data) returns (address[] instances, bytes32 distributionName, uint256 distributionVersion)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "constructor(bytes32 codeHash, bytes32 _metadata, bytes32 name, uint256 version)",
  "error AddressNotFound(bytes32 id)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function distributionName() view returns (bytes32)",
  "function distributionVersion() view returns (uint256)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[] instances, bytes32, uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "constructor(address _repository, bytes32 _metadata)",
  "error AddressNotFound(bytes32 id)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "error InvalidShortString()",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[] instances, bytes32, uint256)",
  "function repository() view returns (address)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "constructor(bytes32 codeHash, bytes32 _metadata, string name, uint256 version)",
  "error AddressNotFound(bytes32 id)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error StringTooLong(string str)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function distributionName() view returns (bytes32)",
  "function distributionVersion() view returns (uint256)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes data) returns (address[] instances, bytes32, uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error AddressNotFound(bytes32 id)",
  "error AliasAlreadyExists(bytes32 aliasHash)",
  "error DistributionExists(bytes32 id)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error DistributionInstantiationRevert(string reason)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidApp(address app, bytes32 distributionId, uint256 appId)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error MigrationAlreadyExists(bytes32 migrationId)",
  "error MigrationContractNotFound(bytes32 migrationId)",
  "error NotAnInstaller(address caller)",
  "error RepositoryAlreadyExists(address repository)",
  "error UntrustedInstaller(address caller)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "error upgradeFailedWithError(bytes reason)",
  "error upgradeFailedWithPanic(uint256 errorCode)",
  "error upgradeFailedWithRevert(string reason)",
  "event AppUpgraded(uint256 indexed appId, uint256 indexed oldVersion, uint256 indexed newVersion)",
  "event DistributionAdded(bytes32 indexed id, string indexed readableNameHashZ, address distribution, address indexed initializer, string readableName)",
  "event DistributionDisabled(bytes32 indexed id)",
  "event DistributorChanged(uint256 appId, address newDistributor)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newAppId, uint256 indexed version, address[] appComponents, bytes args)",
  "event MigrationContractAddedFromVersions(bytes32 indexed distributionId, uint256 indexed baseVersion, uint8 indexed semanticRequirement, uint8 strategy, bytes32 migrationHash, bytes32 migrationId)",
  "event MigrationContractAddedToVersions(bytes32 indexed distributionId, bytes32 indexed migrationHash, uint8 indexed semanticRequirement, uint8 strategy, uint256 baseVersion, bytes32 migrationId)",
  "event MigrationExecuted(bytes32 indexed migrationId, uint256 indexed oldVersion, uint256 indexed newVersion, bytes userCalldata)",
  "event UserUpgraded(uint256 indexed appId, bytes32 indexed migrationId, address indexed account, uint256 newVersion, uint256 oldVersion, bytes userCalldata)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "event VersionMigrationRemoved(bytes32 indexed migrationId)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement, string readableName)",
  "function addDistribution(bytes32 codeHash, address initializer, string readableName)",
  "function addVersionMigration(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata)",
  "function afterCall(bytes config, bytes4, address sender, uint256, bytes, bytes)",
  "function aliasToDistributorId(bytes32 aliasHash) view returns (bytes32 distributorsId)",
  "function appComponents(uint256 appId, uint256) view returns (address)",
  "function appVersions(uint256 appId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function appsRenounced(uint256 appId) view returns (bool renouncing)",
  "function appsUndergoingMigration(uint256 appId) view returns (address undergoingMigration)",
  "function beforeCall(bytes config, bytes4, address sender, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 codeHash, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function disableDistribution(bytes32 distributorId)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionExists(bytes32 distributorsId) view returns (bool exists)",
  "function distributionOf(uint256 appComponent) view returns (bytes32 distributorsId)",
  "function getAppId(address appComponent) view returns (uint256)",
  "function getDistributionId(address appComponent) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getIdFromAlias(string readableName) view returns (bytes32)",
  "function getVersionMigration(bytes32 migrationId) view returns (tuple(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId) migrationPlan)",
  "function installers(uint256 appId) view returns (address installer)",
  "function instantiate(bytes32 distributorId, bytes args) payable returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function migrations(bytes32 migrationId) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId)",
  "function numAppInstances() view returns (uint256)",
  "function onDistributorChanged(uint256 appId, address newDistributor, bytes[] appData) returns (bool[] statuses, bytes[] results)",
  "function removeVersionMigration(bytes32 migrationId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function upgradeUserInstance(uint256 appId, bytes32 migrationId, bytes userCalldata) returns (tuple(uint64 major, uint64 minor, uint128 patch) newVersion)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "constructor(address _owner)",
  "error AddressNotFound(bytes32 id)",
  "error AliasAlreadyExists(bytes32 aliasHash)",
  "error DistributionExists(bytes32 id)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error DistributionInstantiationRevert(string reason)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidApp(address app, bytes32 distributionId, uint256 appId)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error MigrationAlreadyExists(bytes32 migrationId)",
  "error MigrationContractNotFound(bytes32 migrationId)",
  "error NotAnInstaller(address caller)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error RepositoryAlreadyExists(address repository)",
  "error UntrustedInstaller(address caller)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "error upgradeFailedWithError(bytes reason)",
  "error upgradeFailedWithPanic(uint256 errorCode)",
  "error upgradeFailedWithRevert(string reason)",
  "event AppUpgraded(uint256 indexed appId, uint256 indexed oldVersion, uint256 indexed newVersion)",
  "event DistributionAdded(bytes32 indexed id, string indexed readableNameHashZ, address distribution, address indexed initializer, string readableName)",
  "event DistributionDisabled(bytes32 indexed id)",
  "event DistributorChanged(uint256 appId, address newDistributor)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newAppId, uint256 indexed version, address[] appComponents, bytes args)",
  "event MigrationContractAddedFromVersions(bytes32 indexed distributionId, uint256 indexed baseVersion, uint8 indexed semanticRequirement, uint8 strategy, bytes32 migrationHash, bytes32 migrationId)",
  "event MigrationContractAddedToVersions(bytes32 indexed distributionId, bytes32 indexed migrationHash, uint8 indexed semanticRequirement, uint8 strategy, uint256 baseVersion, bytes32 migrationId)",
  "event MigrationExecuted(bytes32 indexed migrationId, uint256 indexed oldVersion, uint256 indexed newVersion, bytes userCalldata)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event UserUpgraded(uint256 indexed appId, bytes32 indexed migrationId, address indexed account, uint256 newVersion, uint256 oldVersion, bytes userCalldata)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "event VersionMigrationRemoved(bytes32 indexed migrationId)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement, string readableName)",
  "function addDistribution(bytes32 id, address initializer, string readableName)",
  "function addVersionMigration(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata)",
  "function afterCall(bytes config, bytes4, address sender, uint256, bytes, bytes)",
  "function aliasToDistributorId(bytes32 aliasHash) view returns (bytes32 distributorsId)",
  "function appComponents(uint256 appId, uint256) view returns (address)",
  "function appVersions(uint256 appId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function appsRenounced(uint256 appId) view returns (bool renouncing)",
  "function appsUndergoingMigration(uint256 appId) view returns (address undergoingMigration)",
  "function beforeCall(bytes config, bytes4, address sender, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 codeHash, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function disableDistribution(bytes32 id)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionExists(bytes32 distributorsId) view returns (bool exists)",
  "function distributionOf(uint256 appComponent) view returns (bytes32 distributorsId)",
  "function getAppId(address appComponent) view returns (uint256)",
  "function getDistribution(bytes32 distributionId) view returns (tuple(address distributionLocation, address initializer))",
  "function getDistributionId(address appComponent) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getIdFromAlias(string readableName) view returns (bytes32)",
  "function getVersionMigration(bytes32 migrationId) view returns (tuple(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId) migrationPlan)",
  "function installers(uint256 appId) view returns (address installer)",
  "function instantiate(bytes32 id, bytes args) payable returns (address[], bytes32, uint256)",
  "function migrations(bytes32 migrationId) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId)",
  "function numAppInstances() view returns (uint256)",
  "function onDistributorChanged(uint256 appId, address newDistributor, bytes[] appData) returns (bool[] statuses, bytes[] results)",
  "function owner() view returns (address)",
  "function removeVersionMigration(bytes32 migrationId)",
  "function renounceOwnership()",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function upgradeUserInstance(uint256 appId, bytes32 migrationId, bytes userCalldata) returns (tuple(uint64 major, uint64 minor, uint128 patch))",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "error AddressNotFound(bytes32 id)",
  "error AliasAlreadyExists(bytes32 aliasHash)",
  "error DistributionExists(bytes32 id)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error DistributionInstantiationRevert(string reason)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidApp(address app, bytes32 distributionId, uint256 appId)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error MigrationAlreadyExists(bytes32 migrationId)",
  "error MigrationContractNotFound(bytes32 migrationId)",
  "error NotAnInstaller(address caller)",
  "error RepositoryAlreadyExists(address repository)",
  "error UntrustedInstaller(address caller)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "error upgradeFailedWithError(bytes reason)",
  "error upgradeFailedWithPanic(uint256 errorCode)",
  "error upgradeFailedWithRevert(string reason)",
  "event AppUpgraded(uint256 indexed appId, uint256 indexed oldVersion, uint256 indexed newVersion)",
  "event DistributionAdded(bytes32 indexed id, string indexed readableNameHashZ, address distribution, address indexed initializer, string readableName)",
  "event DistributionDisabled(bytes32 indexed id)",
  "event DistributorChanged(uint256 appId, address newDistributor)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newAppId, uint256 indexed version, address[] appComponents, bytes args)",
  "event InstantiationCostChanged(bytes32 indexed id, uint256 cost)",
  "event MigrationContractAddedFromVersions(bytes32 indexed distributionId, uint256 indexed baseVersion, uint8 indexed semanticRequirement, uint8 strategy, bytes32 migrationHash, bytes32 migrationId)",
  "event MigrationContractAddedToVersions(bytes32 indexed distributionId, bytes32 indexed migrationHash, uint8 indexed semanticRequirement, uint8 strategy, uint256 baseVersion, bytes32 migrationId)",
  "event MigrationExecuted(bytes32 indexed migrationId, uint256 indexed oldVersion, uint256 indexed newVersion, bytes userCalldata)",
  "event UserUpgraded(uint256 indexed appId, bytes32 indexed migrationId, address indexed account, uint256 newVersion, uint256 oldVersion, bytes userCalldata)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "event VersionMigrationRemoved(bytes32 indexed migrationId)",
  "function _beneficiary() view returns (address)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement, string readableName)",
  "function addDistribution(bytes32 codeHash, address initializer, string readableName)",
  "function addVersionMigration(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata)",
  "function afterCall(bytes config, bytes4, address sender, uint256, bytes, bytes)",
  "function aliasToDistributorId(bytes32 aliasHash) view returns (bytes32 distributorsId)",
  "function appComponents(uint256 appId, uint256) view returns (address)",
  "function appVersions(uint256 appId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function appsRenounced(uint256 appId) view returns (bool renouncing)",
  "function appsUndergoingMigration(uint256 appId) view returns (address undergoingMigration)",
  "function beforeCall(bytes config, bytes4, address sender, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 codeHash, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function defaultInstantiationCost() view returns (uint256)",
  "function disableDistribution(bytes32 distributorId)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionExists(bytes32 distributorsId) view returns (bool exists)",
  "function distributionOf(uint256 appComponent) view returns (bytes32 distributorsId)",
  "function getAppId(address appComponent) view returns (uint256)",
  "function getDistributionId(address appComponent) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getIdFromAlias(string readableName) view returns (bytes32)",
  "function getVersionMigration(bytes32 migrationId) view returns (tuple(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId) migrationPlan)",
  "function installers(uint256 appId) view returns (address installer)",
  "function instantiate(bytes32 distributorId, bytes args) payable returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function instantiationCosts(bytes32 codeHash) view returns (uint256)",
  "function migrations(bytes32 migrationId) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId)",
  "function numAppInstances() view returns (uint256)",
  "function onDistributorChanged(uint256 appId, address newDistributor, bytes[] appData) returns (bool[] statuses, bytes[] results)",
  "function paymentToken() view returns (address)",
  "function removeVersionMigration(bytes32 migrationId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function upgradeUserInstance(uint256 appId, bytes32 migrationId, bytes userCalldata) returns (tuple(uint64 major, uint64 minor, uint128 patch) newVersion)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error initializationFailed(bytes32 id, string reason)",
  "event Initialized(address indexed container, bytes32 indexed codeHash)",
  "function initialize(address distribution, bytes32, uint256, bytes data) returns (address[] instances)",
  "error alreadyExists(bytes32 id, address source)",
  "event Indexed(address indexed container, bytes32 indexed codeHash)",
  "function get(bytes32 id) view returns (address)",
  "function isEIP7702(address account) view returns (bool)",
  "function register(address container)",
  "error alreadyExists(bytes32 id, address source)",
  "event Indexed(address indexed container, bytes32 indexed codeHash)",
  "function get(bytes32 id) view returns (address)",
  "function register(address container)",
  "error AddressNotFound(bytes32 id)",
  "function getWrappedProxyAdmin() view returns (address)",
  "function contractURI() view returns (string)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] sources, bytes32 distributionName, uint256 distributionVersion)",
  "function instantiate(bytes data) returns (address[] instances, bytes32 distributionName, uint256 distributionVersion)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error AliasAlreadyExists(bytes32 aliasHash)",
  "error DistributionExists(bytes32 id)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error DistributionInstantiationRevert(string reason)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidApp(address app, bytes32 distributionId, uint256 appId)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error MigrationAlreadyExists(bytes32 migrationId)",
  "error MigrationContractNotFound(bytes32 migrationId)",
  "error NotAnInstaller(address caller)",
  "error RepositoryAlreadyExists(address repository)",
  "error UntrustedInstaller(address caller)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "error upgradeFailedWithError(bytes reason)",
  "error upgradeFailedWithPanic(uint256 errorCode)",
  "error upgradeFailedWithRevert(string reason)",
  "event AppUpgraded(uint256 indexed appId, uint256 indexed oldVersion, uint256 indexed newVersion)",
  "event DistributionAdded(bytes32 indexed id, string indexed readableNameHashZ, address distribution, address indexed initializer, string readableName)",
  "event DistributionDisabled(bytes32 indexed id)",
  "event DistributorChanged(uint256 appId, address newDistributor)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newAppId, uint256 indexed version, address[] appComponents, bytes args)",
  "event MigrationContractAddedFromVersions(bytes32 indexed distributionId, uint256 indexed baseVersion, uint8 indexed semanticRequirement, uint8 strategy, bytes32 migrationHash, bytes32 migrationId)",
  "event MigrationContractAddedToVersions(bytes32 indexed distributionId, bytes32 indexed migrationHash, uint8 indexed semanticRequirement, uint8 strategy, uint256 baseVersion, bytes32 migrationId)",
  "event MigrationExecuted(bytes32 indexed migrationId, uint256 indexed oldVersion, uint256 indexed newVersion, bytes userCalldata)",
  "event UserUpgraded(uint256 indexed appId, bytes32 indexed migrationId, address indexed account, uint256 newVersion, uint256 oldVersion, bytes userCalldata)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "event VersionMigrationRemoved(bytes32 indexed migrationId)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement, string readableName)",
  "function addDistribution(bytes32 codeHash, address initializer, string readableName)",
  "function addVersionMigration(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata)",
  "function afterCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function disableDistribution(bytes32 distributorId)",
  "function getAppId(address appComponent) view returns (uint256)",
  "function getDistributionId(address appComponent) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorId) view returns (string)",
  "function getDistributions() view returns (bytes32[] distributorIds)",
  "function getIdFromAlias(string readableName) view returns (bytes32)",
  "function getVersionMigration(bytes32 migrationId) view returns (tuple(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId) migrationPlan)",
  "function instantiate(bytes32 distributorId, bytes args) payable returns (address[], bytes32 distributionName, uint256 distributionVersion)",
  "function onDistributorChanged(uint256 appId, address newDistributor, bytes[] appData) returns (bool[] statuses, bytes[] results)",
  "function removeVersionMigration(bytes32 migrationId)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function upgradeUserInstance(uint256 appId, bytes32 migrationId, bytes userCalldata) returns (tuple(uint64 major, uint64 minor, uint128 patch) newVersion)",
  "function afterCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "error initializationFailed(bytes32 id, string reason)",
  "event Initialized(address indexed container, bytes32 indexed codeHash)",
  "function initialize(address distribution, bytes32 distributionName, uint256 distributionVersion, bytes userArgs) returns (address[] instances)",
  "error DisallowDistOnWhitelistedDistributor(address distributor, bytes32 distributionId)",
  "error DistributionIsNotPermitted(address distributor, bytes32 distributionId)",
  "error InvalidDistributor(address distributor)",
  "error InvalidTarget(address target)",
  "error NotAnApp(address app)",
  "error alreadyAllowed(address distributor)",
  "event AppUpgraded(uint256 indexed appId, bytes32 indexed migrationId, uint256 indexed newVersion, bytes userCalldata)",
  "event DistributionAllowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributionDisallowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributorChanged(uint256 indexed appId, address indexed newDistributor)",
  "event DistributorWhitelistRevoked(address indexed distributor)",
  "event DistributorWhitelisted(address indexed distributor)",
  "event Installed(address indexed app, bytes32 indexed distributionId, bytes32 indexed permissions, bytes args)",
  "event Uninstalled(address indexed app)",
  "function afterCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function allowDistribution(address distributor, bytes32 distributionId)",
  "function beforeCall(bytes configuration, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function changeDistributor(uint256 appId, address newDistributor, bytes[] appData)",
  "function disallowDistribution(address distributor, bytes32 distributionId)",
  "function distributorOf(address appComponent) view returns (address)",
  "function getApp(uint256 appId) view returns (tuple(address[] contracts, address middleware, bytes middlewareData) app)",
  "function getAppsNum() view returns (uint256)",
  "function getWhitelistedDistributors() view returns (address[])",
  "function install(address distributor, bytes32 distributionId, bytes args) payable returns (uint256 appId)",
  "function isApp(address app) view returns (bool)",
  "function isDistributor(address distributor) view returns (bool)",
  "function revokeWhitelistedDistributor(address distributor)",
  "function target() view returns (address)",
  "function uninstall(uint256 appId)",
  "function upgradeApp(uint256 appId, bytes32 migrationId, bytes userCalldata)",
  "function whitelistDistributor(address distributor)",
  "function whitelistedDistributions(address distributor) view returns (bytes32[])",
  "function migrate(address[] instances, tuple(uint64 major, uint64 minor, uint128 patch) oldVersion, tuple(uint64 major, uint64 minor, uint128 patch) newVersion, address repository, bytes distributorCalldata, bytes userCalldata)",
  "error EmptyReleaseMetadata()",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event MigrationScriptAdded(uint64 indexed version, bytes32 indexed migrationHash)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function changeMigrationScript(uint64 majorVersion, bytes32 migrationHash)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMigrationScript(uint64 majorVersion) view returns (bytes32 migrationHash)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 migrationHash)",
  "function repositoryName() view returns (bytes32)",
  "function resolveVersion(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "constructor()",
  "error ERC165CheckFailed(address distributor, bytes4 interfaceId, string interfaceName)",
  "error InvalidInitialization()",
  "error NotInitializing()",
  "error OnlyTargetAllowed(address sender, address target)",
  "error disallowedAddress(address sender, bytes4 selector)",
  "event Initialized(uint64 version)",
  "function afterCall(bytes, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function beforeCall(bytes, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function initialize(tuple(bytes4 selector, address[] disallowedAddresses, bool distributionComponentsOnly)[] methodSettings, address target, address distributor)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "error DisallowDistOnWhitelistedDistributor(address distributor, bytes32 distributionId)",
  "error DistributionIsNotPermitted(address distributor, bytes32 distributionId)",
  "error InvalidDistributor(address distributor)",
  "error InvalidInitialization()",
  "error InvalidTarget(address target)",
  "error NotAnApp(address app)",
  "error NotInitializing()",
  "error alreadyAllowed(address distributor)",
  "event AppUpgraded(uint256 indexed appId, bytes32 indexed migrationId, uint256 indexed newVersion, bytes userCalldata)",
  "event DistributionAllowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributionDisallowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributorChanged(uint256 indexed appId, address indexed newDistributor)",
  "event DistributorWhitelistRevoked(address indexed distributor)",
  "event DistributorWhitelisted(address indexed distributor)",
  "event Initialized(uint64 version)",
  "event Installed(address indexed app, bytes32 indexed distributionId, bytes32 indexed permissions, bytes args)",
  "event Uninstalled(address indexed app)",
  "function afterCall(bytes layerConfig, bytes4 selector, address origin, uint256 value, bytes data, bytes beforeCallResult)",
  "function allowDistribution(address distributor, bytes32 distributionId)",
  "function beforeCall(bytes layerConfig, bytes4 selector, address origin, uint256 value, bytes data) returns (bytes)",
  "function changeDistributor(uint256 appId, address newDistributor, bytes[] appData)",
  "function disallowDistribution(address distributor, bytes32 distributionId)",
  "function distributorOf(address appComponent) view returns (address)",
  "function getApp(uint256 appId) view returns (tuple(address[] contracts, address middleware, bytes middlewareData) app)",
  "function getAppsNum() view returns (uint256)",
  "function getWhitelistedDistributors() view returns (address[])",
  "function initialize(address targetAddress)",
  "function install(address distributor, bytes32 distributionId, bytes args) payable returns (uint256 appId)",
  "function isApp(address appComponent) view returns (bool)",
  "function isDistributor(address distributor) view returns (bool)",
  "function revokeWhitelistedDistributor(address distributor)",
  "function target() view returns (address)",
  "function uninstall(uint256 appId)",
  "function upgradeApp(uint256 appId, bytes32 migrationId, bytes userCalldata)",
  "function whitelistDistributor(address distributor)",
  "function whitelistedDistributions(address distributor) view returns (bytes32[])",
  "constructor(address owner)",
  "error DisallowDistOnWhitelistedDistributor(address distributor, bytes32 distributionId)",
  "error DistributionIsNotPermitted(address distributor, bytes32 distributionId)",
  "error InvalidDistributor(address distributor)",
  "error InvalidInitialization()",
  "error InvalidTarget(address target)",
  "error NotAnApp(address app)",
  "error NotInitializing()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error alreadyAllowed(address distributor)",
  "event AppUpgraded(uint256 indexed appId, bytes32 indexed migrationId, uint256 indexed newVersion, bytes userCalldata)",
  "event DistributionAllowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributionDisallowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributorChanged(uint256 indexed appId, address indexed newDistributor)",
  "event DistributorWhitelistRevoked(address indexed distributor)",
  "event DistributorWhitelisted(address indexed distributor)",
  "event Initialized(uint64 version)",
  "event Installed(address indexed app, bytes32 indexed distributionId, bytes32 indexed permissions, bytes args)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Uninstalled(address indexed app)",
  "function afterCall(bytes layerConfig, bytes4 selector, address origin, uint256 value, bytes data, bytes beforeCallResult)",
  "function allowDistribution(address distributor, bytes32 distributionId)",
  "function beforeCall(bytes layerConfig, bytes4 selector, address origin, uint256 value, bytes data) returns (bytes)",
  "function changeDistributor(uint256 appId, address newDistributor, bytes[] appData)",
  "function disallowDistribution(address distributor, bytes32 distributionId)",
  "function distributorOf(address appComponent) view returns (address)",
  "function getApp(uint256 appId) view returns (tuple(address[] contracts, address middleware, bytes middlewareData) app)",
  "function getAppsNum() view returns (uint256)",
  "function getWhitelistedDistributors() view returns (address[])",
  "function initialize(address targetAddress, address owner)",
  "function initialize(address targetAddress)",
  "function install(address distributor, bytes32 distributionId, bytes args) payable returns (uint256 instanceId)",
  "function isApp(address appComponent) view returns (bool)",
  "function isDistributor(address distributor) view returns (bool)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function revokeWhitelistedDistributor(address distributor)",
  "function target() view returns (address)",
  "function transferOwnership(address newOwner)",
  "function uninstall(uint256 appId)",
  "function upgradeApp(uint256 appId, bytes32 migrationId, bytes userCalldata)",
  "function whitelistDistributor(address distributor)",
  "function whitelistedDistributions(address distributor) view returns (bytes32[])",
  "constructor(tuple(address layerAddress, bytes layerConfigData)[] layers, address implementation)",
  "function getLayerAt(uint256 index) view returns (address layerAddress, bytes layerConfigData)",
  "function getLayerCount() view returns (uint256)",
  "function testAccessLayersStorage()",
  "function testAddLayer(address layerAddress, bytes layerConfigData)",
  "function testAddLayerWithParams(address layerAddress, bytes layerConfigData)",
  "function testAfterCall(bytes4 selector, address sender, bytes data, uint256 value, bytes[] beforeCallReturns)",
  "function testBeforeCall(bytes4 selector, address sender, bytes data, uint256 value) returns (bytes[])",
  "function testChangeLayers(tuple(address layerAddress, bytes layerConfigData)[] newLayers)",
  "function testExtractRevertReason(bytes revertData) pure returns (string)",
  "function testGetLayer(uint256 layerIdx) view returns (address, bytes)",
  "function testPopLayer()",
  "function testSetLayer(address layerAddress, uint256 layerIndex, bytes layerConfigData)",
  "function testSetLayers(tuple(address layerAddress, bytes layerConfigData)[] newLayers)",
  "function testValidateLayerAfterCall(uint256 layerIdx, bytes4 selector, address sender, bytes data, uint256 value, bytes beforeCallReturnValue)",
  "function testValidateLayerBeforeCall(uint256 layerIdx, bytes4 selector, address sender, bytes data, uint256 value) returns (bytes)",
  "function createKey(address target, bytes4 selector) pure returns (bytes32)",
  "function encodeConfig(address middleware, bytes configData) pure returns (bytes)",
  "function executeAfterCall(bytes[] middlewareLayers, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function executeBeforeCall(bytes[] middlewareLayers, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function getConfig(bytes encodedConfig) pure returns (tuple(address middleware, bytes configData))",
  "function getLayerTest(bytes[] middlewareLayers, uint256 index) pure returns (tuple(address middleware, bytes configData))",
  "error versionMismatch(string message)",
  "function areEqual(tuple(uint64 major, uint64 minor, uint128 patch) _version1, tuple(uint64 major, uint64 minor, uint128 patch) _version2) pure returns (bool)",
  "function compare(tuple(uint64 major, uint64 minor, uint128 patch) has, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) needs) pure returns (bool)",
  "function getNextMajor(tuple(uint64 major, uint64 minor, uint128 patch) _version) pure returns (tuple(uint64 major, uint64 minor, uint128 patch))",
  "function getNextMinor(tuple(uint64 major, uint64 minor, uint128 patch) _version) pure returns (tuple(uint64 major, uint64 minor, uint128 patch))",
  "function getNextPatch(tuple(uint64 major, uint64 minor, uint128 patch) _version) pure returns (tuple(uint64 major, uint64 minor, uint128 patch))",
  "function parse(uint256 _version) pure returns (tuple(uint64 major, uint64 minor, uint128 patch))",
  "function require_exact(tuple(uint64 major, uint64 minor, uint128 patch) _version1, tuple(uint64 major, uint64 minor, uint128 patch) _version2) pure",
  "function require_greater(tuple(uint64 major, uint64 minor, uint128 patch) _version1, tuple(uint64 major, uint64 minor, uint128 patch) _version2) pure",
  "function require_greater_equal(tuple(uint64 major, uint64 minor, uint128 patch) _version1, tuple(uint64 major, uint64 minor, uint128 patch) _version2) pure",
  "function require_lesser(tuple(uint64 major, uint64 minor, uint128 patch) _version1, tuple(uint64 major, uint64 minor, uint128 patch) _version2) pure",
  "function require_lesser_equal(tuple(uint64 major, uint64 minor, uint128 patch) _version1, tuple(uint64 major, uint64 minor, uint128 patch) _version2) pure",
  "function require_major(tuple(uint64 major, uint64 minor, uint128 patch) _version1, tuple(uint64 major, uint64 minor, uint128 patch) _version2) pure",
  "function require_major_minor(tuple(uint64 major, uint64 minor, uint128 patch) _version1, tuple(uint64 major, uint64 minor, uint128 patch) _version2) pure",
  "function toUint256(tuple(uint64 major, uint64 minor, uint128 patch) _version) pure returns (uint256)",
  "function versionToString(tuple(uint64 major, uint64 minor, uint128 patch) _version) pure returns (string)",
  "error AliasAlreadyExists(bytes32 aliasHash)",
  "error DistributionExists(bytes32 id)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error DistributionInstantiationRevert(string reason)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidApp(address app, bytes32 distributionId, uint256 appId)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error MigrationAlreadyExists(bytes32 migrationId)",
  "error MigrationContractNotFound(bytes32 migrationId)",
  "error NotAnInstaller(address caller)",
  "error RepositoryAlreadyExists(address repository)",
  "error UntrustedInstaller(address caller)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "error upgradeFailedWithError(bytes reason)",
  "error upgradeFailedWithPanic(uint256 errorCode)",
  "error upgradeFailedWithRevert(string reason)",
  "event AppUpgraded(uint256 indexed appId, uint256 indexed oldVersion, uint256 indexed newVersion)",
  "event DistributionAdded(bytes32 indexed id, string indexed readableNameHashZ, address distribution, address indexed initializer, string readableName)",
  "event DistributionDisabled(bytes32 indexed id)",
  "event DistributorChanged(uint256 appId, address newDistributor)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newAppId, uint256 indexed version, address[] appComponents, bytes args)",
  "event MigrationContractAddedFromVersions(bytes32 indexed distributionId, uint256 indexed baseVersion, uint8 indexed semanticRequirement, uint8 strategy, bytes32 migrationHash, bytes32 migrationId)",
  "event MigrationContractAddedToVersions(bytes32 indexed distributionId, bytes32 indexed migrationHash, uint8 indexed semanticRequirement, uint8 strategy, uint256 baseVersion, bytes32 migrationId)",
  "event MigrationExecuted(bytes32 indexed migrationId, uint256 indexed oldVersion, uint256 indexed newVersion, bytes userCalldata)",
  "event UserUpgraded(uint256 indexed appId, bytes32 indexed migrationId, address indexed account, uint256 newVersion, uint256 oldVersion, bytes userCalldata)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "event VersionMigrationRemoved(bytes32 indexed migrationId)",
  "function addDistribution(address, address, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement), string) pure",
  "function addDistribution(bytes32, address, string) pure",
  "function addVersionMigration(bytes32, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement), tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement), bytes32, uint8, bytes) pure",
  "function afterCall(bytes, bytes4, address, uint256, bytes, bytes)",
  "function afterCallCalled() view returns (bool)",
  "function beforeCall(bytes, bytes4, address, uint256, bytes) returns (bytes)",
  "function beforeCallCalled() view returns (bool)",
  "function beforeCallReturnValue() view returns (bytes)",
  "function calculateDistributorId(address, address) pure returns (bytes32)",
  "function changeVersion(bytes32, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)) pure",
  "function disableDistribution(bytes32) pure",
  "function getAppId(address) pure returns (uint256)",
  "function getDistributionId(address) pure returns (bytes32)",
  "function getDistributionURI(bytes32) pure returns (string)",
  "function getDistributions() pure returns (bytes32[])",
  "function getIdFromAlias(string) pure returns (bytes32)",
  "function getVersionMigration(bytes32) pure returns (tuple(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId))",
  "function instantiate(bytes32, bytes) payable returns (address[], bytes32, uint256)",
  "function onDistributorChanged(uint256, address, bytes[]) pure returns (bool[], bytes[])",
  "function removeVersionMigration(bytes32) pure",
  "function setBeforeCallReturn(bytes value)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function upgradeUserInstance(uint256, bytes32, bytes) pure returns (tuple(uint64 major, uint64 minor, uint128 patch))",
  "constructor(address _middleware)",
  "function middleware() view returns (address)",
  "function simulateAfterCall(bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function simulateBeforeCall(bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function testAfterCallDistributionOnly(address sender)",
  "function testDistributionOnly(address sender) returns (bytes)",
  "function testNonDistributionOnly(address sender) returns (bytes)",
  "constructor(string name)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "error StringTooLong(string str)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[], bytes32, uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "event MockInit(string testData)",
  "function init(bytes data)",
  "constructor()",
  "error AliasAlreadyExists(bytes32 aliasHash)",
  "error DistributionExists(bytes32 id)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error DistributionInstantiationRevert(string reason)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidApp(address app, bytes32 distributionId, uint256 appId)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error MigrationAlreadyExists(bytes32 migrationId)",
  "error MigrationContractNotFound(bytes32 migrationId)",
  "error NotAnInstaller(address caller)",
  "error RepositoryAlreadyExists(address repository)",
  "error UntrustedInstaller(address caller)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "error upgradeFailedWithError(bytes reason)",
  "error upgradeFailedWithPanic(uint256 errorCode)",
  "error upgradeFailedWithRevert(string reason)",
  "event AppUpgraded(uint256 indexed appId, uint256 indexed oldVersion, uint256 indexed newVersion)",
  "event DistributionAdded(bytes32 indexed id, string indexed readableNameHashZ, address distribution, address indexed initializer, string readableName)",
  "event DistributionDisabled(bytes32 indexed id)",
  "event DistributorChanged(uint256 appId, address newDistributor)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newAppId, uint256 indexed version, address[] appComponents, bytes args)",
  "event MigrationContractAddedFromVersions(bytes32 indexed distributionId, uint256 indexed baseVersion, uint8 indexed semanticRequirement, uint8 strategy, bytes32 migrationHash, bytes32 migrationId)",
  "event MigrationContractAddedToVersions(bytes32 indexed distributionId, bytes32 indexed migrationHash, uint8 indexed semanticRequirement, uint8 strategy, uint256 baseVersion, bytes32 migrationId)",
  "event MigrationExecuted(bytes32 indexed migrationId, uint256 indexed oldVersion, uint256 indexed newVersion, bytes userCalldata)",
  "event UserUpgraded(uint256 indexed appId, bytes32 indexed migrationId, address indexed account, uint256 newVersion, uint256 oldVersion, bytes userCalldata)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "event VersionMigrationRemoved(bytes32 indexed migrationId)",
  "function addDistribution(address, address, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement), string) pure",
  "function addDistribution(bytes32, address, string) pure",
  "function addMockDistribution(bytes32 distributionId)",
  "function addVersionMigration(bytes32, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement), tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement), bytes32, uint8, bytes) pure",
  "function afterCall(bytes, bytes4, address, uint256, bytes, bytes) pure",
  "function appComponents(uint256, uint256) view returns (address)",
  "function appIds(address) view returns (uint256)",
  "function beforeCall(bytes, bytes4, address, uint256, bytes) view returns (bytes)",
  "function beforeCallReturnValue() view returns (bytes)",
  "function calculateDistributorId(address, address) pure returns (bytes32)",
  "function changeVersion(bytes32, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)) pure",
  "function disableDistribution(bytes32) pure",
  "function distributionExists(bytes32) view returns (bool)",
  "function distributionOf(uint256) view returns (bytes32)",
  "function getAppId(address appComponent) view returns (uint256)",
  "function getDistributionId(address) pure returns (bytes32)",
  "function getDistributionURI(bytes32) pure returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getIdFromAlias(string) pure returns (bytes32)",
  "function getLastUpgradeUserInstanceCall() view returns (tuple(uint256 appId, bytes32 migrationId, bytes userCalldata))",
  "function getVersionMigration(bytes32) pure returns (tuple(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId))",
  "function instantiate(bytes32 distributionId, bytes) payable returns (address[], bytes32, uint256)",
  "function lastUpgradeCall() view returns (uint256 appId, bytes32 migrationId, bytes userCalldata)",
  "function numAppInstances() view returns (uint256)",
  "function onDistributorChanged(uint256, address, bytes[]) pure returns (bool[] statuses, bytes[] results)",
  "function removeVersionMigration(bytes32) pure",
  "function setBeforeCallReturn(bytes value)",
  "function setUpgradeUserInstanceRevertState(bool _shouldRevert)",
  "function shouldRevertOnUpgrade() view returns (bool)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function upgradeUserInstance(uint256 appId, bytes32 migrationId, bytes userCalldata) returns (tuple(uint64 major, uint64 minor, uint128 patch))",
  "constructor()",
  "function setSupportedInterface(bytes4 interfaceId, bool supported)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "constructor(string name, string symbol, uint256 initialSupply)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "function allowance(address owner, address spender) view returns (uint256)",
  "function approve(address spender, uint256 value) returns (bool)",
  "function balanceOf(address account) view returns (uint256)",
  "function decimals() view returns (uint8)",
  "function instantiate(bytes) returns (address[] instances)",
  "function name() view returns (string)",
  "function symbol() view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transfer(address to, uint256 value) returns (bool)",
  "function transferFrom(address from, address to, uint256 value) returns (bool)",
  "event FunctionCalled(bytes4 selector, address sender, bytes data, uint256 value)",
  "function getValue() view returns (string)",
  "function setValueWithoutMiddleware(string newValue) returns (bool)",
  "function testDefaultModifier(string newValue) payable returns (bool)",
  "function testModifierWithParams(bytes4 _selector, address _sender, bytes _data, uint256 _value, string newValue) returns (bool)",
  "function testValue() view returns (string)",
  "event AfterCallExecuted()",
  "event BeforeCallExecuted(bytes[] layerReturns)",
  "event FunctionCalled(bytes4 selector, address sender, bytes data, uint256 value)",
  "function functionExecuted() view returns (bool)",
  "function getLayerAt(uint256 index) view returns (address middleware, bytes configData)",
  "function getLayerCount() view returns (uint256)",
  "function setValueNoMiddleware(string newValue) returns (bool)",
  "function setupMiddlewareLayers(address[] middlewareAddresses, bytes[] configData)",
  "function testERC7746CModifier(bytes4 _selector, address _sender, bytes _data, uint256 _value, string newValue) returns (bool)",
  "function testERC7746Modifier(string newValue) payable returns (bool)",
  "function testTrackedModifier(bytes4 _selector, address _sender, bytes _data, uint256 _value, string newValue) returns (bool)",
  "function testValue() view returns (string)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function get() view returns (address[], bytes32, uint256)",
  "function instantiate(bytes args) returns (address[], bytes32, uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function migrate(address[], tuple(uint64 major, uint64 minor, uint128 patch), tuple(uint64 major, uint64 minor, uint128 patch), address, bytes, bytes)",
  "function supportsInterface(bytes4 interfaceId) pure returns (bool)",
  "error initializationFailed(bytes32 id, string reason)",
  "event Initialized(address indexed container, bytes32 indexed codeHash)",
  "function initialize(address distribution, bytes32 distributionName, uint256 distributionVersion, bytes userArgs) returns (address[] instances)",
  "function initialize(bytes32, address[], bytes32, uint256, bytes args) pure",
  "constructor(address targetAddress, address owner)",
  "error DisallowDistOnWhitelistedDistributor(address distributor, bytes32 distributionId)",
  "error DistributionIsNotPermitted(address distributor, bytes32 distributionId)",
  "error InvalidDistributor(address distributor)",
  "error InvalidInitialization()",
  "error InvalidTarget(address target)",
  "error NotAnApp(address app)",
  "error NotInitializing()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error alreadyAllowed(address distributor)",
  "event AppUpgraded(uint256 indexed appId, bytes32 indexed migrationId, uint256 indexed newVersion, bytes userCalldata)",
  "event DistributionAllowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributionDisallowed(address indexed distributor, bytes32 indexed distributionId)",
  "event DistributorChanged(uint256 indexed appId, address indexed newDistributor)",
  "event DistributorWhitelistRevoked(address indexed distributor)",
  "event DistributorWhitelisted(address indexed distributor)",
  "event Initialized(uint64 version)",
  "event Installed(address indexed app, bytes32 indexed distributionId, bytes32 indexed permissions, bytes args)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Uninstalled(address indexed app)",
  "function afterCall(bytes layerConfig, bytes4 selector, address origin, uint256 value, bytes data, bytes beforeCallResult)",
  "function allowDistribution(address distributor, bytes32 distributionId)",
  "function beforeCall(bytes layerConfig, bytes4 selector, address origin, uint256 value, bytes data) returns (bytes)",
  "function changeDistributor(uint256 appId, address newDistributor, bytes[] appData)",
  "function disallowDistribution(address distributor, bytes32 distributionId)",
  "function distributorOf(address appComponent) view returns (address)",
  "function getApp(uint256 appId) view returns (tuple(address[] contracts, address middleware, bytes middlewareData) app)",
  "function getAppsNum() view returns (uint256)",
  "function getWhitelistedDistributors() view returns (address[])",
  "function initialize(address targetAddress)",
  "function install(address distributor, bytes32 distributionId, bytes args) payable returns (uint256 instanceId)",
  "function isApp(address appComponent) view returns (bool)",
  "function isDistributor(address distributor) view returns (bool)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function revokeWhitelistedDistributor(address distributor)",
  "function target() view returns (address)",
  "function transferOwnership(address newOwner)",
  "function uninstall(uint256 instanceId)",
  "function upgradeApp(uint256 appId, bytes32 migrationId, bytes userCalldata)",
  "function whitelistDistributor(address distributor)",
  "function whitelistedDistributions(address distributor) view returns (bytes32[])",
  "constructor(address repository_, string metadata_)",
  "error AddressNotFound(bytes32 id)",
  "error CodeNotFoundInIndex(bytes32 codeId)",
  "error FailedDeployment()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "error InvalidShortString()",
  "error StringTooLong(string str)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() view returns (string)",
  "function get() view returns (address[] src, bytes32 name, uint256 version)",
  "function instantiate(bytes) returns (address[] instances, bytes32 name, uint256 version)",
  "function repository() view returns (address)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function get() view returns (address[], bytes32, uint256)",
  "function instantiate(bytes) returns (address[], bytes32, uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "constructor()",
  "function afterCall(bytes configData, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function afterCallCalled() view returns (bool)",
  "function afterCallOrder() view returns (uint256)",
  "function afterCallOrderValue() view returns (uint256)",
  "function beforeCall(bytes configData, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "function beforeCallCalled() view returns (bool)",
  "function beforeCallOrder() view returns (uint256)",
  "function beforeCallOrderValue() view returns (uint256)",
  "function beforeCallReturnValue() view returns (bytes)",
  "function getLastAfterCallArgs() view returns (bytes configData, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function getLastBeforeCallArgs() view returns (bytes configData, bytes4 selector, address sender, uint256 value, bytes data)",
  "function lastAfterCallBeforeCallResult() view returns (bytes)",
  "function lastAfterCallConfig() view returns (bytes)",
  "function lastAfterCallData() view returns (bytes)",
  "function lastAfterCallSelector() view returns (bytes4)",
  "function lastAfterCallSender() view returns (address)",
  "function lastAfterCallValue() view returns (uint256)",
  "function lastBeforeCallConfig() view returns (bytes)",
  "function lastBeforeCallData() view returns (bytes)",
  "function lastBeforeCallSelector() view returns (bytes4)",
  "function lastBeforeCallSender() view returns (address)",
  "function lastBeforeCallValue() view returns (uint256)",
  "function recordCallOrder() view returns (bool)",
  "function resetCounters()",
  "function setBeforeCallReturn(bytes value)",
  "function setRecordCallOrder(bool _recordCallOrder)",
  "constructor(address _middleware)",
  "function middleware() view returns (address)",
  "function simulateAfterCall(address hook, bytes4 selector, address sender, uint256 value, bytes data, bytes beforeCallResult)",
  "function simulateBeforeCall(address hook, bytes4 selector, address sender, uint256 value, bytes data) returns (bytes)",
  "event MigrationExecuted(address[] instances, uint256 oldVersion, uint256 newVersion, bytes distributorCalldata, bytes userCalldata)",
  "function migrate(address[] instances, tuple(uint64 major, uint64 minor, uint128 patch) oldVersion, tuple(uint64 major, uint64 minor, uint128 patch) newVersion, address, bytes distributorCalldata, bytes userCalldata)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function initialize(bytes32, address[], bytes32, uint256, bytes) pure",
  "function initialize(address[], bytes) pure",
  "constructor(address owner_)",
  "error AddressNotFound(bytes32 id)",
  "error AliasAlreadyExists(bytes32 aliasHash)",
  "error DistributionExists(bytes32 id)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error DistributionInstantiationRevert(string reason)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidApp(address app, bytes32 distributionId, uint256 appId)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error MigrationAlreadyExists(bytes32 migrationId)",
  "error MigrationContractNotFound(bytes32 migrationId)",
  "error NotAnInstaller(address caller)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error RepositoryAlreadyExists(address repository)",
  "error UntrustedInstaller(address caller)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "error upgradeFailedWithError(bytes reason)",
  "error upgradeFailedWithPanic(uint256 errorCode)",
  "error upgradeFailedWithRevert(string reason)",
  "event AppUpgraded(uint256 indexed appId, uint256 indexed oldVersion, uint256 indexed newVersion)",
  "event DistributionAdded(bytes32 indexed id, string indexed readableNameHashZ, address distribution, address indexed initializer, string readableName)",
  "event DistributionDisabled(bytes32 indexed id)",
  "event DistributorChanged(uint256 appId, address newDistributor)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newAppId, uint256 indexed version, address[] appComponents, bytes args)",
  "event MigrationContractAddedFromVersions(bytes32 indexed distributionId, uint256 indexed baseVersion, uint8 indexed semanticRequirement, uint8 strategy, bytes32 migrationHash, bytes32 migrationId)",
  "event MigrationContractAddedToVersions(bytes32 indexed distributionId, bytes32 indexed migrationHash, uint8 indexed semanticRequirement, uint8 strategy, uint256 baseVersion, bytes32 migrationId)",
  "event MigrationExecuted(bytes32 indexed migrationId, uint256 indexed oldVersion, uint256 indexed newVersion, bytes userCalldata)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event UserUpgraded(uint256 indexed appId, bytes32 indexed migrationId, address indexed account, uint256 newVersion, uint256 oldVersion, bytes userCalldata)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "event VersionMigrationRemoved(bytes32 indexed migrationId)",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement, string readableName)",
  "function addDistribution(bytes32 id, address initializer, string readableName)",
  "function addVersionMigration(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata)",
  "function afterCall(bytes config, bytes4, address sender, uint256, bytes, bytes)",
  "function aliasToDistributorId(bytes32 aliasHash) view returns (bytes32 distributorsId)",
  "function appComponents(uint256 appId, uint256) view returns (address)",
  "function appVersions(uint256 appId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function appsRenounced(uint256 appId) view returns (bool renouncing)",
  "function appsUndergoingMigration(uint256 appId) view returns (address undergoingMigration)",
  "function beforeCall(bytes config, bytes4, address sender, uint256, bytes) view returns (bytes)",
  "function calculateDistributorId(bytes32 codeHash, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function disableDistribution(bytes32 id)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionExists(bytes32 distributorsId) view returns (bool exists)",
  "function distributionOf(uint256 appComponent) view returns (bytes32 distributorsId)",
  "function getAppId(address appComponent) view returns (uint256)",
  "function getDistribution(bytes32 distributionId) view returns (tuple(address distributionLocation, address initializer))",
  "function getDistributionId(address appComponent) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getIdFromAlias(string readableName) view returns (bytes32)",
  "function getVersionMigration(bytes32 migrationId) view returns (tuple(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId) migrationPlan)",
  "function installers(uint256 appId) view returns (address installer)",
  "function instantiate(bytes32 id, bytes args) payable returns (address[], bytes32, uint256)",
  "function migrations(bytes32 migrationId) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId)",
  "function numAppInstances() view returns (uint256)",
  "function onDistributorChanged(uint256 appId, address newDistributor, bytes[] appData) returns (bool[] statuses, bytes[] results)",
  "function owner() view returns (address)",
  "function removeVersionMigration(bytes32 migrationId)",
  "function renounceApp(uint256 appId)",
  "function renounceOwnership()",
  "function setMigration(uint256 appId, address migration)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function upgradeUserInstance(uint256 appId, bytes32 migrationId, bytes userCalldata) returns (tuple(uint64 major, uint64 minor, uint128 patch))",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "event Distributed(address indexed distributor, address[] instances)",
  "function contractURI() pure returns (string)",
  "function get() view returns (address[], bytes32, uint256)",
  "function instantiate(bytes) returns (address[], bytes32, uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "constructor()",
  "error AddressNotFound(bytes32 id)",
  "error EmptyReleaseMetadata()",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event MigrationScriptAdded(uint64 indexed version, bytes32 indexed migrationHash)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function changeMigrationScript(uint64 major, bytes32 migrationHash)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMajorReleaseMetadata(uint64 major) view returns (bytes)",
  "function getMajorReleases() view returns (uint64)",
  "function getMigrationScript(uint64 major) view returns (bytes32)",
  "function getMinorReleaseMetadata(uint64 major, uint64 minor) view returns (bytes)",
  "function getMinorReleases(uint64 major) view returns (uint64)",
  "function getPatchReleaseMetadata(uint64 major, uint64 minor, uint64 patch) view returns (bytes)",
  "function getPatchReleases(uint64 major, uint64 minor) view returns (uint128)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 migrationHash)",
  "function repositoryName() view returns (bytes32)",
  "function resolveVersion(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "constructor(address defaultAdmin, address token, uint256 defaultCost)",
  "error AccessControlBadConfirmation()",
  "error AccessControlEnforcedDefaultAdminDelay(uint48 schedule)",
  "error AccessControlEnforcedDefaultAdminRules()",
  "error AccessControlInvalidDefaultAdmin(address defaultAdmin)",
  "error AccessControlUnauthorizedAccount(address account, bytes32 neededRole)",
  "error AddressNotFound(bytes32 id)",
  "error AliasAlreadyExists(bytes32 aliasHash)",
  "error DistributionExists(bytes32 id)",
  "error DistributionInstantiationFailed(bytes reason)",
  "error DistributionInstantiationPanic(uint256 errorCode)",
  "error DistributionInstantiationRevert(string reason)",
  "error DistributionNotFound(bytes32 id)",
  "error InitializerNotFound(bytes32 id)",
  "error InvalidApp(address app, bytes32 distributionId, uint256 appId)",
  "error InvalidRepository(address repository)",
  "error InvalidVersionRequested(bytes32 distributionId, string version)",
  "error MigrationAlreadyExists(bytes32 migrationId)",
  "error MigrationContractNotFound(bytes32 migrationId)",
  "error NotAnInstaller(address caller)",
  "error RepositoryAlreadyExists(address repository)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error UntrustedInstaller(address caller)",
  "error UnversionedDistribution(bytes32 distributionId)",
  "error VersionOutdated(bytes32 distributionId, string version)",
  "error upgradeFailedWithError(bytes reason)",
  "error upgradeFailedWithPanic(uint256 errorCode)",
  "error upgradeFailedWithRevert(string reason)",
  "event AppUpgraded(uint256 indexed appId, uint256 indexed oldVersion, uint256 indexed newVersion)",
  "event DefaultAdminDelayChangeCanceled()",
  "event DefaultAdminDelayChangeScheduled(uint48 newDelay, uint48 effectSchedule)",
  "event DefaultAdminTransferCanceled()",
  "event DefaultAdminTransferScheduled(address indexed newAdmin, uint48 acceptSchedule)",
  "event DistributionAdded(bytes32 indexed id, string indexed readableNameHashZ, address distribution, address indexed initializer, string readableName)",
  "event DistributionDisabled(bytes32 indexed id)",
  "event DistributorChanged(uint256 appId, address newDistributor)",
  "event Instantiated(bytes32 indexed distributionId, uint256 indexed newAppId, uint256 indexed version, address[] appComponents, bytes args)",
  "event InstantiationCostChanged(bytes32 indexed id, uint256 cost)",
  "event MigrationContractAddedFromVersions(bytes32 indexed distributionId, uint256 indexed baseVersion, uint8 indexed semanticRequirement, uint8 strategy, bytes32 migrationHash, bytes32 migrationId)",
  "event MigrationContractAddedToVersions(bytes32 indexed distributionId, bytes32 indexed migrationHash, uint8 indexed semanticRequirement, uint8 strategy, uint256 baseVersion, bytes32 migrationId)",
  "event MigrationExecuted(bytes32 indexed migrationId, uint256 indexed oldVersion, uint256 indexed newVersion, bytes userCalldata)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "event UserUpgraded(uint256 indexed appId, bytes32 indexed migrationId, address indexed account, uint256 newVersion, uint256 oldVersion, bytes userCalldata)",
  "event VersionChanged(bytes32 indexed distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) indexed newRequirement, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirementData)",
  "event VersionMigrationRemoved(bytes32 indexed migrationId)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function _beneficiary() view returns (address)",
  "function acceptDefaultAdminTransfer()",
  "function addDistribution(address repository, address initializer, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) requirement, string readableName)",
  "function addDistribution(bytes32 id, address initializer, string readableName)",
  "function addVersionMigration(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata)",
  "function afterCall(bytes config, bytes4, address sender, uint256, bytes, bytes)",
  "function aliasToDistributorId(bytes32 aliasHash) view returns (bytes32 distributorsId)",
  "function appComponents(uint256 appId, uint256) view returns (address)",
  "function appVersions(uint256 appId) view returns (uint64 major, uint64 minor, uint128 patch)",
  "function appsRenounced(uint256 appId) view returns (bool renouncing)",
  "function appsUndergoingMigration(uint256 appId) view returns (address undergoingMigration)",
  "function beforeCall(bytes config, bytes4, address sender, uint256, bytes) view returns (bytes)",
  "function beginDefaultAdminTransfer(address newAdmin)",
  "function calculateDistributorId(bytes32 codeHash, address initializer) pure returns (bytes32)",
  "function calculateDistributorId(address repository, address initializer) pure returns (bytes32)",
  "function cancelDefaultAdminTransfer()",
  "function changeDefaultAdminDelay(uint48 newDelay)",
  "function changeVersion(bytes32 distributionId, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) newRequirement)",
  "function defaultAdmin() view returns (address)",
  "function defaultAdminDelay() view returns (uint48)",
  "function defaultAdminDelayIncreaseWait() view returns (uint48)",
  "function defaultInstantiationCost() view returns (uint256)",
  "function disableDistribution(bytes32 id)",
  "function distributionComponents(bytes32 distributorsId) view returns (address distributionLocation, address initializer)",
  "function distributionExists(bytes32 distributorsId) view returns (bool exists)",
  "function distributionOf(uint256 appComponent) view returns (bytes32 distributorsId)",
  "function getAppId(address appComponent) view returns (uint256)",
  "function getDistributionId(address appComponent) view returns (bytes32)",
  "function getDistributionURI(bytes32 distributorsId) view returns (string)",
  "function getDistributions() view returns (bytes32[])",
  "function getIdFromAlias(string readableName) view returns (bytes32)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function getVersionMigration(bytes32 migrationId) view returns (tuple(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId) migrationPlan)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function installers(uint256 appId) view returns (address installer)",
  "function instantiate(bytes32 id, bytes args) payable returns (address[] srcs, bytes32 name, uint256 version)",
  "function instantiationCosts(bytes32 codeHash) view returns (uint256)",
  "function migrations(bytes32 migrationId) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) from, tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) to, bytes32 migrationHash, uint8 strategy, bytes distributorCalldata, bytes32 distributionId)",
  "function numAppInstances() view returns (uint256)",
  "function onDistributorChanged(uint256 appId, address newDistributor, bytes[] appData) returns (bool[] statuses, bytes[] results)",
  "function owner() view returns (address)",
  "function paymentToken() view returns (address)",
  "function pendingDefaultAdmin() view returns (address newAdmin, uint48 schedule)",
  "function pendingDefaultAdminDelay() view returns (uint48 newDelay, uint48 schedule)",
  "function removeVersionMigration(bytes32 migrationId)",
  "function renounceRole(bytes32 role, address account)",
  "function revokeRole(bytes32 role, address account)",
  "function rollbackDefaultAdminDelay()",
  "function setInstantiationCost(bytes32 id, uint256 cost)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function upgradeUserInstance(uint256 appId, bytes32 migrationId, bytes userCalldata) returns (tuple(uint64 major, uint64 minor, uint128 patch) newVersion)",
  "function versionRequirements(bytes32 distributorsId) view returns (tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement)",
  "constructor(address initialOwner)",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "function getWrappedProxyAdmin() view returns (address)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function transferOwnership(address newOwner)",
  "event Bar()",
  "event Initialized()",
  "function foo()",
  "function initialize()",
  "function ping() pure returns (string)",
  "constructor(address _logic, address _admin, address _owner, bytes _data, bytes _middlewareData)",
  "error AddressEmptyCode(address target)",
  "error ERC1967InvalidAdmin(address admin)",
  "error ERC1967InvalidImplementation(address implementation)",
  "error ERC1967NonPayable()",
  "error FailedCall()",
  "error ProxyDeniedAdminAccess()",
  "event AdminChanged(address previousAdmin, address newAdmin)",
  "event Upgraded(address indexed implementation)",
  "constructor(address owner, bytes32 name, string cURI)",
  "error AddressNotFound(bytes32 id)",
  "error EmptyReleaseMetadata()",
  "error OwnableInvalidOwner(address owner)",
  "error OwnableUnauthorizedAccount(address account)",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event MigrationScriptAdded(uint64 indexed version, bytes32 indexed migrationHash)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function changeMigrationScript(uint64 major, bytes32 migrationHash)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMajorReleaseMetadata(uint64 major) view returns (bytes)",
  "function getMajorReleases() view returns (uint64)",
  "function getMigrationScript(uint64 major) view returns (bytes32)",
  "function getMinorReleaseMetadata(uint64 major, uint64 minor) view returns (bytes)",
  "function getMinorReleases(uint64 major) view returns (uint64)",
  "function getPatchReleaseMetadata(uint64 major, uint64 minor, uint64 patch) view returns (bytes)",
  "function getPatchReleases(uint64 major, uint64 minor) view returns (uint128)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 migrationHash)",
  "function owner() view returns (address)",
  "function renounceOwnership()",
  "function repositoryName() view returns (bytes32)",
  "function resolveVersion(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function transferOwnership(address newOwner)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "error EmptyReleaseMetadata()",
  "error ReleaseZeroNotAllowed()",
  "error VersionDoesNotExist(uint256 version)",
  "error VersionExists(uint256 version)",
  "error VersionIncrementInvalid(uint256 version)",
  "event MigrationScriptAdded(uint64 indexed version, bytes32 indexed migrationHash)",
  "event ReleaseMetadataUpdated(uint256 indexed version, bytes releaseMetadata)",
  "event VersionAdded(uint256 indexed version, bytes32 indexed source, bytes buildMetadata)",
  "function changeMigrationScript(uint64 majorVersion, bytes32 migrationHash)",
  "function contractURI() view returns (string)",
  "function get(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getLatest() view returns (tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 sourceId, bytes metadata))",
  "function getMajorReleaseMetadata(uint64 major) view returns (bytes)",
  "function getMajorReleases() view returns (uint64)",
  "function getMigrationScript(uint64 major) view returns (bytes32)",
  "function getMinorReleaseMetadata(uint64 major, uint64 minor) view returns (bytes)",
  "function getMinorReleases(uint64 major) view returns (uint64)",
  "function getPatchReleaseMetadata(uint64 major, uint64 minor, uint64 patch) view returns (bytes)",
  "function getPatchReleases(uint64 major, uint64 minor) view returns (uint128)",
  "function newRelease(bytes32 sourceId, bytes metadata, tuple(uint64 major, uint64 minor, uint128 patch) version, bytes32 migrationHash)",
  "function repositoryName() view returns (bytes32)",
  "function resolveVersion(tuple(tuple(uint64 major, uint64 minor, uint128 patch) version, uint8 requirement) required) view returns (uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function updateReleaseMetadata(tuple(uint64 major, uint64 minor, uint128 patch) version, bytes releaseMetadata)",
  "error versionMismatch(string message)"
]